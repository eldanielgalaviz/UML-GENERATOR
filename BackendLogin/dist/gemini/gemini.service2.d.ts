import { ConfigService } from '@nestjs/config';
import { MermaidDiagram, IEEE830Requirement, AnalysisResponse, GeneratedCode } from './interfaces/code-generation.interface';
export declare class GeminiService {
    private configService;
    private readonly genAI;
    private readonly model;
    private readonly logger;
    private readonly MAX_RETRIES;
    private readonly RETRY_DELAY;
    constructor(configService: ConfigService);
    private delay;
    private retryOperation;
    analyzeRequirements(requirements: string): Promise<AnalysisResponse>;
    generateCode(diagrams: MermaidDiagram[], requirements: IEEE830Requirement[]): Promise<GeneratedCode>;
    private generateBackendCode;
    private extractEntitiesFromDiagram;
    private extractFlowsFromDiagram;
    private cleanAndValidateJson;
    private fixBrokenJson;
    private getDefaultBackendStructure;
    private generateFrontendCode;
    private cleanInitialResponse;
    private extractJsonStructure;
    private repairJsonStrings;
    private escapeJsonString;
    private cleanJsonStructure;
    private repairUnterminatedStrings;
    private finalCleanup;
    private preprocessJsonString;
    private getDefaultFrontendStructure;
    private validateAndRepairJson;
    private escapeSpecialChars;
    private extractValidJson;
    private sanitizeJsonResponse;
    private repairJsonString;
    private processJsonResponse;
    private normalizeString;
    private fixAndCompleteJson;
    private cleanRawJson;
    private normalizeJsonStructure;
    private repairJson;
    private processNestJSFile;
    private fixJson;
    private validateAngularStructure;
    private processAngularJsonResponse;
    private validateNestJSFileType;
    private validateAngularFileType;
    private processAngularFile;
    private processAngularModule;
    private cleanJsonText;
    private normalizeAngularType;
    private validateAngularFrontend;
    private processNestJSModule;
    private validateNestJSFile;
    private validateAngularGeneratedCode;
    private validateGeneratedCode;
    private analyzeIEEE830;
    private generateAllDiagrams;
    private generateMermaidDiagram;
    private buildMermaidPrompt;
    private validateMermaidCode;
    private extractMermaidCode;
    private getDiagramTitle;
    private buildCodePrompt;
}
